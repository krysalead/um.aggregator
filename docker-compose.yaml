version: "3"
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
      args:
        MODE: DEV
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/usr/app/src
      - ./frontend/public:/usr/app/public
      - ./frontend/api:/usr/app/api
    environment:
      CI: "true"
      SERVER: http://backend:4000/
      WAIT_HOSTS: backend:4000
      WAIT_HOSTS_TIMEOUT: 60
      CHOKIDAR_USEPOLLING: "true"
  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ./backend/src:/usr/app/src
      - ./backend/tests:/usr/app/tests
      - ./backend/data:/usr/app/data
    depends_on:
      - kafka
    environment:
      ENV: development
      LOGGING_SERVICES: debug
      BROKERS: kafka:9092
      WAIT_HOSTS: kafka:9092
  metrics:
    build:
      context: ./metrics
      dockerfile: dockerfile
    depends_on:
      - kafka
    environment:
      ENV: development
      INFLUXDB_URL: http://influxdb:8086
      BROKERS: kafka:9092
      WAIT_HOSTS: kafka:9092
  zookeeper:
    image: zookeeper:3.4.9
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zook:2888:3888
    volumes:
      - ./data/zook/data:/data
      - ./data/zook/datalog:/datalog
  kafka:
    image: confluentinc/cp-kafka:5.5.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka/data:/var/lib/kafka/data
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  influxdb:
    image: influxdb:latest
    ports:
      - "8086:8086"
    volumes:
      - influxdb-storage:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=db0
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
  grafana:
    image: grafana/grafana:latest
    ports:
      - "8080:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
volumes:
  influxdb-storage:
  grafana-storage:
